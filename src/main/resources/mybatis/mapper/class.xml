<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis.mapper.class">

<!-- 강사가 진행하고 있는 강의 목록 가져오기 -->
	<select id="selectTutorClass" parameterType="class" resultType="class">
		SELECT CLASS_NO,class_nm,class_thum, TUTOR_ID 
		FROM class 
		where TUTOR_ID=#{tutor_id}
	</select>
	
	
	
	<!-- 메인:인기순 강의 -->
	<select id="selectClassesOrderByHot" resultType="class"> 
		<!-- 구매 인원 순 --><!-- , nvl(appl_cnt.appl_cnt,0) -->
		select class.class_no, class_nm_s, class_thum, class_cate.class_cate_nm   
		  from class, class_cate, (select count(*) as appl_cnt, class_no
			                         from class_appl
			                       group by class_no
			                       order by count(*) desc) appl_cnt
		 where class.class_cate_no = class_cate.class_cate_no
			      and class.class_no = appl_cnt.class_no(+)
			      and rownum &lt;= 12
		
		<!-- 별점순 -->  
		<!-- select star.class_no,class.CLASS_NM_S, class.CLASS_THUM, class_cate.class_cate_nm
		  from (select ROWNUM AS RNUM, nvl(review_star,0) as review_star, class_no
		          from ( select nvl(avg(review.REVIEW_STAR),0) as review_star, class.class_no as class_no 
		                  from class, review
		                 where class.CLASS_NO = review.CLASS_NO(+)
		                group by class.class_no
		                order by avg(review.REVIEW_STAR) desc   )
		        ) star, class, class_cate
		where rnum &lt;=4
		     and star.class_no =class.class_no
		     and class.class_cate_no = class_cate.class_cate_no
		order by star.review_star desc -->	  
			  
	</select>
	
	<!-- 메인:인기순 강의, 로그인 사용자 찜유무 포함 -->
	<select id="selectClassesOrderByHotPick" parameterType="String" resultType="class">
		<!-- 구매 인원 순 -->
		select hotlist.* , nvl(pick.mid, 'N') as pick_yn
		from (
		    select class.class_no, class_nm_s, class_thum, class_cate.class_cate_nm, nvl(appl_cnt.appl_cnt,0)
		    from class, class_cate, (select count(*) as appl_cnt, class_no
		                               from class_appl
		                              group by class_no
		                              order by count(*) desc) appl_cnt
		    where class.class_cate_no = class_cate.class_cate_no
		          and class.class_no = appl_cnt.class_no(+)
		          and rownum &lt;= 12
		 )hotlist, pick
		where hotlist.class_no = pick.class_no (+)
		      and pick.mid(+) = #{mid}
		
		<!-- 별점순 -->  
		<!-- select hotlist.class_no, class_nm_s, class_thum, class_cate_nm, nvl(pick.mid, 'N') as pick_yn
		from (
		    select star.class_no,class.CLASS_NM_S, class.CLASS_THUM, class_cate.class_cate_nm
		    from (select ROWNUM AS RNUM, nvl(review_star,0) as review_star, class_no
		            from ( select nvl(avg(review.REVIEW_STAR),0) as review_star, class.class_no as class_no 
		                     from class, review
		                    where class.CLASS_NO = review.CLASS_NO(+)
		                   group by class.class_no
		                   order by avg(review.REVIEW_STAR) desc   )
		      ) star, class, class_cate
		    where rnum &lt;=4
	          and star.class_no =class.class_no
	          and class.class_cate_no = class_cate.class_cate_no
		    order by star.review_star desc
		    ) hotlist, pick
		where hotlist.class_no = pick.class_no (+)
		      and pick.mid(+) = #{mid} -->
	</select>
	 
	
	<!-- 메인 신규 강의  -->
	<select id="selectClassesOrderByNew" resultType="class">
		select class_no, class_cate_nm, class_nm,class_nm_s, class_thum
		  from class, class_cate
		  where class.class_cate_no = class_cate.class_cate_no and rownum  &lt;= 4 
		  order by CLASS_NO desc
	</select>
	
	<!-- 메인 신규 강의 , 로그인 사용자 찜 유무 포함 -->
	<select id="selectClassesOrderByNewPick" parameterType="String" resultType="class">
		select newlist.class_no, class_cate_nm, class_nm,class_nm_s, class_thum, nvl(pick.mid, 'N') as pick_yn
			from (
			   select class_no, class_cate_nm, class_nm,class_nm_s, class_thum
			          from class, class_cate
			          where class.class_cate_no = class_cate.class_cate_no and rownum &lt;= 4
			          order by CLASS_NO desc
			    ) newlist, pick
			where newlist.class_no = pick.class_no (+)
				  and pick.mid(+) = #{mid}
	</select>
	
	
	<!-- 강의중인 전체 강의 조회  -->
	<select id="selectClasses" resultType="class">
		<!-- 구매 인원 순 -->
		select class.class_no, class_nm_s, class_thum, class_cate.class_cate_nm, nvl(appl_cnt.appl_cnt,0)
		from class, class_cate, (select count(*) as appl_cnt, class_no
		                           from class_appl
		                          group by class_no
		                          order by count(*) desc) appl_cnt
		where class.class_cate_no = class_cate.class_cate_no
		      and class.class_no = appl_cnt.class_no(+)
		
		<!-- select nvl(star.review_star,0)as review_star , star.class_no, class.class_nm_s, class.CLASS_THUM, class.class_thum2, class_cate.class_cate_nm
		  from (  select avg(review.REVIEW_STAR) as review_star, class.class_no as class_no 
		            from class, review
		           where class.CLASS_NO = review.CLASS_NO(+)
		           group by class.class_no
		           order by avg(review.REVIEW_STAR) desc    
		        ) star, class, class_cate
		  where star.class_no = class.class_no
		        and class.class_cate_no = class_cate.class_cate_no
		  order by review_star desc -->
	</select>
	
	<!-- 강의중인 전체 강의 조회 , 로그인 사용자 찜 유무 포함 -->
	<select id="selectClassesPick" resultType="class">
		<!-- 구매 인원 순 -->
		select clist.*, nvl(pick.mid, 'N') as pick_yn 
		from(    
		    select class.class_no, class_nm_s, class_thum, class_cate.class_cate_nm, nvl(appl_cnt.appl_cnt,0)
		    from class, class_cate, (select count(*) as appl_cnt, class_no
		                               from class_appl
		                              group by class_no
		                              order by count(*) desc) appl_cnt
		    where class.class_cate_no = class_cate.class_cate_no
		          and class.class_no = appl_cnt.class_no(+)
		) clist, pick
		where clist.class_no = pick.class_no (+)
		     and pick.mid(+) = #{mid}
		     
		<!-- 별점순 -->
		<!-- select clist.*, nvl(pick.mid, 'N') as pick_yn from
			 ( select nvl(star.review_star,0)as review_star , star.class_no, class.class_nm_s, class.CLASS_THUM, class.class_thum2, class_cate.class_cate_nm
			      from (  select avg(review.REVIEW_STAR) as review_star, class.class_no as class_no 
			                from class, review
			               where class.CLASS_NO = review.CLASS_NO(+)
			               group by class.class_no
			               order by avg(review.REVIEW_STAR) desc    
			            ) star, class, class_cate
			      where star.class_no = class.class_no
			            and class.class_cate_no = class_cate.class_cate_no
			      order by review_star desc
			  )clist, pick
		 where clist.class_no = pick.class_no (+)
			   and pick.mid(+) = #{mid} -->
	</select>
	
	
	<!-- 20.11.25 -->
	<!-- 20.11.27 별점 추가 -->
	<!-- 20.12.03  -->
	<select id="selectbyClassNo" resultType="class" parameterType="int"> 
        
        select class.CLASS_NO, CLASS_NM, CLASS_SUB, CLASS_CURR, CLASS_THUM, class_thum2, TUTOR_ID, CLASS_CATE_NO, CLASS_VIDEO_NO, CLASS_PRICE, 
			   CLASS_TOT_TIME, CLASS_CURR2, CLASS_CURR3, CLASS_NM_S, member.mname, member.minfo, nvl(classreview.review_star, 0) as review_star, nvl(pickcount.class_pick_cnt,0) as class_pick_cnt
		from class, member, ( select avg(REVIEW_STAR) as review_star, class.class_no
                                 from review ,class
                                 where class.class_no = review.class_no(+)
                                 group by class.class_no 
                             ) classreview, (select count(*) as class_pick_cnt, class_no from pick
                                        where class_no = #{class_no}
                                        group by class_no) pickcount
		where class.class_no = #{class_no}
		      and member.mid = class.TUTOR_ID
              and class.class_no = classreview.class_no 
              and pickcount.class_no(+) = class.class_no 
	</select>
	
	
	
	<!-- 20.11.26  -->
	<!-- tutor_id(mid)가 진행중인 강의 리스트/강의 카테고리 이름도 가져올 수 있도록 수정(지연) -->
	<select id="selectbyTutorId" parameterType="String" resultType="class">
		select class_no, class_nm, class_thum, class_nm_s, class_cate_nm
		from ( 
				select class_no, class_nm, class_thum, TUTOR_ID,class_nm_s, ca.class_cate_nm
		        from class c, class_cate ca
		        where c.class_cate_no = ca.class_cate_no) t 
		where tutor_id=#{tutor_id} 
	</select>
	
	<select id="selectTutorIdByClassNo" parameterType="int" resultType="String">
		select tutor_id from class where class_no=#{class_no}
	</select>


	<select id="selectCountApplByMidClassNo" resultType="int" parameterType="classAppl">
		select count(*) from class_appl where class_no=#{class_no} and mid=#{mid}
	</select>



	<!-- 강의정보 수정/혜빈 -->
	<update id="updateClass" parameterType="class">
		UPDATE class
		set class_nm=#{class_nm},
			class_nm_s=#{class_nm_s},
			class_sub=#{class_sub},
			class_curr=#{class_curr}
		where class_no=#{class_no}
	</update>
	
	
	
</mapper>
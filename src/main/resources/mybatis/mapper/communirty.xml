<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis.mapper.community">

	<select id="selectAll" resultType="community">
		select comm_no, comm_cate_nm, comm_date, comm_title, comm_content, comm_hitno, mid
		from community , community_cate
		where community.comm_cate_no=community_cate.comm_cate_no
		order by comm_date desc 
	</select>
 
 	<select id="selectChat" resultType="community">
      	select comm_no,comm_date, comm_title, comm_content, comm_hitno, member.mid ,community_cate.comm_cate_nm, community_cate.comm_cate_no, member.mnick
		from community, member, community_cate
		where community_cate.comm_cate_no = '1' and community.mid=member.mid and community.comm_cate_no=community_cate.comm_cate_no
		order by comm_date desc
	</select>
 	
 	<select id="selectTips" resultType="community">
		select comm_no,comm_date, comm_title, comm_content, comm_hitno, member.mid ,community_cate.comm_cate_nm, community_cate.comm_cate_no, member.mnick
		from community, member, community_cate
		where community_cate.comm_cate_no = '2' and community.mid=member.mid and community.comm_cate_no=community_cate.comm_cate_no
		order by comm_date desc
	</select>
 
	<select id="selectBoast" resultType="community">
			select comm_no,comm_date, comm_title, comm_content, comm_hitno, member.mid ,community_cate.comm_cate_nm, community_cate.comm_cate_no, member.mnick
		from community, member, community_cate
		where community_cate.comm_cate_no = '3' and community.mid=member.mid and community.comm_cate_no=community_cate.comm_cate_no
		order by comm_date desc
	</select> 
	
	<select id="selectAssign" resultType="community">
			select comm_no,comm_date, comm_title, comm_content, comm_hitno, member.mid ,community_cate.comm_cate_nm, community_cate.comm_cate_no, member.mnick
		from community, member, community_cate
		where community_cate.comm_cate_no = '4' and community.mid=member.mid and community.comm_cate_no=community_cate.comm_cate_no
		order by comm_date desc 
	</select>
 	<!-- 후기 게시판 내용 가져오기 -->
	<select id="selectReviewAll" resultType="review">
		SELECT  review.review_no, class_cate.class_cate_nm, class.class_cate_no, review_star, review.review_date, review.review_title, review.review_content, review.review_hitno, member.mnick
		FROM REVIEW, CLASS , class_cate , member
		WHERE CLASS.CLASS_NO= review.class_no and class.class_cate_no=class_cate.class_cate_no and review.mid = member.mid
		order by review_date desc
		
	</select>
	
	<select id="selectCatereview" resultType="review" parameterType="int">
		select review_no,class_cate_nm,class_cate_no,review_star,review_date,review_title,review_content,review_hitno,mid
		from(   SELECT  r.review_no, ca.class_cate_nm, c.class_cate_no, r.review_star, r.review_date, r.review_title, r.review_content, r.review_hitno, r.mid
		        FROM REVIEW r, CLASS c, class_cate ca
		        WHERE c.CLASS_NO= r.class_no and c.class_cate_no=ca.class_cate_no)
		where class_cate_no = #{cateno}
		order by review_date desc
	</select>
	

	<!-- community pager -->
	<select id="countAll" resultType="int">
		select count(*) from community
	</select>
	
	<select id="selectByPage" parameterType="communityPager" resultType="community">
  select rnum, comm_no, comm_date, comm_title, comm_content, comm_hitno, mid , mnick, comm_cate_no,comm_cate_nm
	from (
		select rownum as rnum, comm_no, comm_date, comm_title, comm_content, comm_hitno,mid , mnick ,comm_cate_no,comm_cate_nm
	  	from (
   			select comm_no, comm_date, comm_title, comm_content, comm_hitno, member.mid , member.mnick, community.comm_cate_no,comm_cate_nm
   			from community, member, community_cate
            where community.mid = member.mid and community.comm_cate_no=community_cate.comm_cate_no
   			order by comm_date desc    
   		)
		where rownum &lt;= #{endRowNo}
	)
	where rnum &gt;= #{startRowNo}
	</select>
	
	<!-- review pager -->
	<select id="countReviewAll" resultType="int">
		select count(*) from review
	</select>
	
	<select id="selectByReviewPage" parameterType="reviewPager" resultType="review">
    select rnum, review_no, review_date, review_title, review_content, review_hitno, mnick , class_no,review_star,class_cate_no,class_cate_nm
	from (
		select rownum as rnum, review_no, review_date, review_title, review_content, review_hitno, mnick ,class_no,review_star,class_cate_no,class_cate_nm
	  	from (
   			select review_no, review_date, review_title, review_content, review_hitno,member.mnick ,  class.class_no, review_star, class.class_cate_no, class_cate_nm
   			from review,class,class_cate,member
            where review.class_no= class.class_no 
                  and class_cate.class_cate_no= class.class_cate_no
                  and review.mid = member.mid
            order by review_date desc      
                  
   		)
		where rownum &lt;= #{endRowNo} 
		
	)
	where rnum &gt;= #{startRowNo}
	
	</select>
	
	<!-- detailpage -->
	<select id="selectByComno" parameterType="int" resultType="community">
		select c.comm_no, c.comm_date, c.comm_title, c.comm_content, c.comm_hitno, m.mid, m.mnick,ca.comm_cate_no,ca.comm_cate_nm
		from community c, member m, community_cate ca
		where c.mid = m.mid and c.comm_cate_no=ca.comm_cate_no
          and comm_no = #{comm_no} 
	</select>
	
	<select id="selectByReviewno" parameterType="int" resultType="review">
		 select r.review_no, r.review_date, r.review_title, r.review_content, r.review_hitno, m.mid, m.mnick, c.class_no, r.review_star, ca.class_cate_no, ca.class_cate_nm
		from review r, member m,class c,class_cate ca
		where c.class_cate_no=ca.class_cate_no and r.class_no=c.class_no and r.mid=m.mid
          and r.review_no = #{review_no}
	</select>
	
	<!--커뮤니티_글쓰기안에서 분야별 데이터 가져오기 -->
	<select id="selectCommunityCateList" resultType="community">
	    select *
		from community_CATE
	</select>
	<!-- 리뷰_list dropdown 분야별 데이터 가져오기 -->
	<select id="selectCateList" resultType="classcate">
	    select *
		from class_CATE
		order by class_cate_no asc
	</select>
	
	<!--<select id="selectCateReviewList" resultType="classcate">
	    select *
		from class_CATE
		order by class_cate_no asc
	</select> -->
	
	<!-- 리뷰_list 분야번호로 이름 데이터 가져오기 -->
	<select id="selectCatenmByCateno" resultType="String">
	    select class_cate_nm
        from class_cate
        where class_cate_no = #{cateno}
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 리뷰 작성 가능 리스트, 이미 리뷰를 작성한 강의는 제외 -->
	<select id="selectReviewList" resultType="review" parameterType="String">
	    select class.class_no, class.class_nm from CLASS_APPL,CLASS 
		where CLASS_APPL.class_no = class.class_no
     		  and mid=#{mid}
      		  and class.class_no not in (select class_no from review where mid=#{mid})
	</select>
	
	
	<select id="selectClassNameByReviewNo" parameterType="int" resultType="String">
		select class_nm from class,review 
		 where class.class_no = review.class_no 
      		   and review.review_no = #{review_no}
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 커뮤니티_글쓰기 insert하기 -->
	<insert id="insertCommunityWriteApply" parameterType="community">
		 insert into Community 
        values (SEQ_COMM_NO.nextval, sysdate, #{comm_title}, #{comm_content},0, #{mid}, #{comm_cate_no}  )
	</insert>
	
	<insert id="insertCommunityReviewApply" parameterType="review">
		 insert into Review 
        values (SEQ_REVIEW_NO.nextval, sysdate, #{review_title}, #{review_content},0, #{mid}, #{class_no}, #{review_star})
	</insert>
	
	<!-- 커뮤니티 hitno update하기 -->
	<update id="addCommunityHitno" parameterType="int">
		update Community set comm_hitno = (select comm_hitno from community where comm_no=#{comm_no})+1 where comm_no= #{comm_no}
	</update>
	
	<!-- 리뷰 hitno update하기 -->
	<update id="addReviewHitno" parameterType="int">
		update Review set review_hitno = (select review_hitno from review where review_no=#{review_no})+1 where review_no= #{review_no}
	</update>
	
	<update id="updateCommunity" parameterType="community">
		update Community set comm_title=#{comm_title}, comm_content=#{comm_content}, comm_cate_no=#{comm_cate_no} where comm_no=#{comm_no}
	</update>
	
	<update id="updateReview" parameterType="review">
		update Review set review_title=#{review_title}, review_content=#{review_content}, review_star=#{review_star} where review_no=#{review_no}
	</update>
	
	<delete id="deleteByCommbno" parameterType="int">
		delete from community where comm_no=#{comm_no}
	</delete>
	
	<delete id="deleteByReviewno" parameterType="int">
		delete from review where review_no=#{review_no}
	</delete>
	
	<!-- 커뮤니티 댓글-->
	
	<!-- 20.11.26 지은 추가, class_no로 가장 최근 리뷰 두개 조회  -->
	<select id="selectByClassNo" parameterType="int" resultType="review"> 
		select mnick,mpro_img,review_title,review_content,review_date from (
		    select rownum as rnum,mnick,mpro_img,review_title, review_content, review_date from (
		        select member.mnick, member.mpro_img, review_title, review_content, review_date
		        from review, member
		        where review.class_no = #{class_no}
		              and member.mid = review.mid
		        order by review_date desc) 
		    )
		where rnum &lt;= 2
	</select>
<!-- 	 <insert id="insert" parameterType="community">
		<selectKey order="BEFORE" resultType="int" keyProperty="comm_no">
			select SEQ_COMM_NO.nextval from dual
		</selectKey>
		insert into community (comm_no, comm_date, comm_title, comm_content, comm_hitno,mid,mnick,comm_cate_no,comm_cate_nm )
		values (SEQ_COMM_NO.currval, #{comm_title}, #{comm_content}, sysdate, #{mid})
	</insert>  -->
	
</mapper>